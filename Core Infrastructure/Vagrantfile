# -*- mode: ruby -*-
# vi: set ft=ruby :

domain = "shibusa.io"

Vagrant.require_version ">= 1.9.4"
Vagrant.configure("2") do |config|
  # Vagrant ssh private key
  config.ssh.private_key_path = ["~/.ssh/id_rsa", "~/.vagrant.d/insecure_private_key"]
  config.ssh.insert_key = false

  # # Linux Router
  # config.vm.define "linuxrouter", primary: true do |lrouter|
  #   lrouter.vm.box = "centos/7"
  #   lrouter.vm.hostname = "linuxrouter"
  #   lrouter.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)", ip: "192.168.1.5"
  #   lrouter.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
  #   lrouter.vm.provision :shell, inline: "sysctl -w net.ipv4.ip_forward=1"
  #   lrouter.vm.provision :shell, path: "../init.sh"
  #   lrouter.vm.provision :shell, path: "../vboxguest.sh"
  # end

  # DNS Primary and Secondary
  (1..2).each do |i|
    config.vm.define "dns0#{i}" do |dns|
      dns.vm.box = "centos/7"
      dns.vm.hostname = "dns0#{i}.#{domain}"
      dns.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
      dns.vm.provision :shell, path: "../init.sh"
      dns.vm.provision :shell, path: "../vboxguest.sh"
    end
  end

  # Network Monitor server
  config.vm.define "netmon" do |mon|
    mon.vm.box = "centos/7"
    mon.vm.hostname = "netmon.#{domain}"
    mon.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)", ip: "192.168.1.10"
    mon.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
    mon.vm.provision :shell, path: "../init.sh"
    mon.vm.provision :shell, path: "../vboxguest.sh"
    mon.vm.provision :shell, path: "../zabbix.sh"
  end
end
